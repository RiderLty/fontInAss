name: build
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build-builder-multiarch"]
    types:
      - completed
jobs:
  npm-run-build-on-subset:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        working-directory: ./src/subset
        run: npm install

      - name: Build project
        working-directory: ./src/subset
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: subset-dist          # 制品任意取名
          path: ./src/subset/dist      # 保留的目录
          retention-days: 1          # 可选：只存 1 天，省额度



  build-amd64-noproxy:
    runs-on: ubuntu-latest
    needs:
      - npm-run-build-on-subset
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: subset-dist
          path: src/subset

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push noproxy
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-noproxy
          build-args: |
            BUILDER=riderlty/fontinass-builder:latest
          context: .
          push: true
          tags: riderlty/fontinass:noproxy-amd64

  build-arm64-noproxy:
    runs-on: ubuntu-22.04-arm
    needs:
      - npm-run-build-on-subset
    steps:
      - uses: actions/checkout@v2
     
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: subset-dist
          path: src/subset
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push noproxy
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-noproxy
          build-args: |
            BUILDER=riderlty/fontinass-builder:latest
          context: .
          push: true
          tags: riderlty/fontinass:noproxy-arm64

  build-amd64-default:
    runs-on: ubuntu-latest
    needs:
      - build-amd64-noproxy
    steps:
      - uses: actions/checkout@v2
     
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push latest
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-default
          build-args: |
            BASE=riderlty/fontinass:noproxy-amd64
          context: .
          push: true
          tags: riderlty/fontinass:latest-amd64

  build-arm64-default:
    runs-on: ubuntu-22.04-arm
    needs:
      - build-arm64-noproxy
    steps:
      - uses: actions/checkout@v2
     
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push latest
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile-default
          build-args: |
            BASE=riderlty/fontinass:noproxy-arm64
          context: .
          push: true
          tags: riderlty/fontinass:latest-arm64


  combine-noproxy:
    runs-on: ubuntu-latest
    needs:
      - build-amd64-noproxy
      - build-arm64-noproxy
    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
        with:
            inputs: riderlty/fontinass:noproxy-amd64,riderlty/fontinass:noproxy-arm64
            tags: riderlty/fontinass:noproxy
            push: true


  combine-default:
    runs-on: ubuntu-latest
    needs:
      - build-amd64-default
      - build-arm64-default
    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
        with:
            inputs: riderlty/fontinass:latest-amd64,riderlty/fontinass:latest-arm64
            tags: riderlty/fontinass:latest
            push: true